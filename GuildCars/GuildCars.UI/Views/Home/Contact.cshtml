@model GuildCars.Models.Tables.Contact
@{
    ViewBag.Title = "Contact";
}
<!--Code source for dependent validation: https://stackoverflow.com/questions/8906228/how-to-validate-one-field-related-to-anothers-value-in-asp-net-mvc-3 -->

<h2>@ViewBag.Title.</h2>

<div class="container">
    @using (Html.BeginForm())
    {
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label for="name">Name: </label>
                    @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="email">Email Address: </label>
                    @Html.TextBoxFor(model => model.ContactEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="email">Phone: </label>
                    @Html.TextBoxFor(model => model.ContactPhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="email">Message: </label>
                    @Html.TextAreaFor(model => model.ContactMessage, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactMessage, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-outline-primary">
                    Submit
                </button>
            </div>
            <div class="col-md-6 col-sm-12">
                <div class="map-responsive">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2822.26294162668!2d-93.27401168408828!3d44.97896937909818!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x52b332907d76198f%3A0x47305550cfd48180!2sThe%20Software%20Guild!5e0!3m2!1sen!2sus!4v1587243967138!5m2!1sen!2sus" width="600" height="450" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>
                </div>
                <address>
                    111 Main Str<br />
                    Minneapolis, MN 55555<br />
                    <abbr title="Sales">P: </abbr>
                    425.555.0100
                    <abbr title="Service">P: </abbr>
                    425.555.0100
                </address>
            </div>
        </div>
    }
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    jQuery.validator.unobtrusive.adapters.add(
        'requiredif', ['other'], function (options) {

            var getModelPrefix = function (fieldName) {
                return fieldName.substr(0, fieldName.lastIndexOf('.') + 1);
            }

            var appendModelPrefix = function (value, prefix) {
                if (value.indexOf('*.') === 0) {
                    value = value.replace('*.', prefix);
                }
                return value;
            }

            var prefix = getModelPrefix(options.element.name),
                other = options.params.other,
                fullOtherName = appendModelPrefix(other, prefix),
                element = $(options.form).find(':input[name="' + fullOtherName + '"]')[0];

            options.rules['requiredif'] = element;
            if (options.message) {
                options.messages['requiredif'] = options.message;
            }
        }
    );

    jQuery.validator.addMethod('requiredif', function (value, element, params) {
        var otherValue = $(params).val();
        if (otherValue != null && otherValue != '') {
            return true;
        }
        return value != null && value != '';
    }, '');
</script>